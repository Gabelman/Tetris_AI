import unittest

from tetris import PygameTetris

class TestTetris(unittest.TestCase):

    def test_count_holes(self):
        tetris = PygameTetris(0)
        grid1 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,1,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [1,0,1,1,1,0,0,1,0,0,],
                [1,0,1,1,0,1,0,1,0,0,],
                [1,0,1,1,0,0,0,1,0,0,],]
        grid2 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [1,1,1,1,1,1,1,1,1,1,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,1,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [1,0,1,1,1,0,0,1,0,0,],
                [1,0,1,1,0,1,0,1,0,0,],
                [1,0,1,1,0,0,0,1,0,0,],]
        grid3 = [[1,1,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,1,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,1,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [0,0,1,0,0,0,0,1,0,0,],
                [1,0,1,1,1,0,0,1,0,0,],
                [1,0,1,1,0,1,0,1,0,0,],
                [1,0,1,1,0,0,0,1,0,0,],]
        grid4 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],]
        tetris.grid = grid1
        self.assertEquals(11, tetris.calculate_height())
        tetris.grid = grid2
        self.assertEquals(14, tetris.calculate_height())
        tetris.grid = grid3
        self.assertEquals(20, tetris.calculate_height())
        tetris.grid = grid4
        self.assertEquals(0, tetris.calculate_height())

    def test_tetris_holes(self):
        tetris = PygameTetris(0)
        grid1 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],]
        grid2 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,1,1,1,0,0,0,0,],
                [0,0,0,1,0,1,0,0,0,0,],]
        grid3 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,1,1,1,1,1,],
                [0,0,0,0,1,0,0,0,0,0,],]
        grid4 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,1,1,0,1,1,],
                [0,0,0,0,1,0,0,0,1,0,],]
        grid5 = [[0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,0,0,0,0,0,],
                [0,0,0,0,0,1,1,0,0,0,],
                [0,0,0,0,0,1,0,1,0,0,],
                [0,0,0,0,0,1,0,0,0,1,],
                [0,0,0,0,1,0,0,1,0,0,],]
        
        tetris.grid = grid1
        self.assertEquals(0, tetris.count_holes())
        tetris.grid = grid2
        self.assertEquals(1, tetris.count_holes())
        tetris.grid = grid3
        self.assertEquals(5, tetris.count_holes())
        tetris.grid = grid4
        self.assertEquals(1, tetris.count_holes())
        tetris.grid = grid5
        self.assertEquals(3, tetris.count_holes())
        

if __name__ == '__main__':
    unittest.main()